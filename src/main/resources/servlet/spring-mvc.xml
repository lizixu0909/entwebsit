<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-4.2.xsd  
		http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.sipuang">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/page/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="1"/>
    </bean>
    <mvc:resources location="/static/" mapping="/static/**"/>

    <import resource="classpath:./freemarker/spring-freemarker.xml"/>
    <!-- 自定义参数绑定 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!-- 转换器 -->
        <property name="converters">
            <set>
                <!-- 字符串转时间转换器 -->
                <bean class="com.sipuang.entwebsit.domain.converter.StringToDateConverter"/>
            </set>
        </property>
    </bean>

    <!-- 对应  @link  com.sipuang.domain.web.exception.ExceptionAdvice -->
    <!--<bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>-->
    <!-- 校验器 -->
<!--    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        &lt;!&ndash; hibernate校验器 &ndash;&gt;
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        &lt;!&ndash; 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties &ndash;&gt;
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    &lt;!&ndash; 校验错误信息配置文件 &ndash;&gt;
    <bean id="messageSource"  class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        &lt;!&ndash; 资源文件名 &ndash;&gt;
        <property name="basenames">
            <list>
                <value>classpath:validator/message</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
        &lt;!&ndash; 资源文件编码格式 &ndash;&gt;
        &lt;!&ndash; <property name="fileEncodings" value="UTF-8" /> &ndash;&gt;
        &lt;!&ndash; 对资源文件内容缓存时间，单位秒 &ndash;&gt;
        <property name="cacheSeconds" value="120"/>
    </bean>-->
    <!--拦截器 -->
    <!--    <mvc:interceptors>
            &lt;!&ndash;多个拦截器,顺序执行 &ndash;&gt;
            &lt;!&ndash; 登陆认证拦截器 &ndash;&gt;
            <mvc:interceptor>
                &lt;!&ndash; /**包括所有URL并包含其子url &ndash;&gt;
                <mvc:mapping path="/**"/>
                &lt;!&ndash; 排除该路径下文件访问拦截 &ndash;&gt;
                <mvc:exclude-mapping path="/resources/**"/>
                <bean class="com.sipuang.domain.web.interceptor.LoginInterceptor"></bean>
            </mvc:interceptor>
            &lt;!&ndash;<mvc:interceptor>&ndash;&gt;
            &lt;!&ndash;&lt;!&ndash; /**包括所有URL并包含其子url &ndash;&gt;&ndash;&gt;
            &lt;!&ndash;<mvc:mapping path="/**"/>&ndash;&gt;
            &lt;!&ndash;&lt;!&ndash; 排除该路径下文件访问拦截 &ndash;&gt;&ndash;&gt;
            &lt;!&ndash;<mvc:exclude-mapping path="/resources/**"/>&ndash;&gt;
            &lt;!&ndash;<bean class="com.sipuang.domain.web.interceptor.ValidationInterceptor"></bean>&ndash;&gt;
            &lt;!&ndash;</mvc:interceptor>&ndash;&gt;
        </mvc:interceptors>-->
    <!-- 静态资源访问 -->

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="1048576"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="1048576"/>
    </bean>

    <aop:config proxy-target-class="true"></aop:config>

</beans>